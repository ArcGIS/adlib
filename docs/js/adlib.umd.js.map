{"version":3,"file":"adlib.umd.js","sources":["../lib/getWithDefault.js","../lib/mapValues.js","../lib/deepMap.js","../lib/optional-transform/arborist.js","../lib/optional-transform/optional.js","../lib/adlib.js"],"sourcesContent":["/**\n * Return the value of a deep property, using a path.\n */\nexport default function getWithDefault (obj, path, defaultValue = undefined) {\n  return path\n    .split('.')\n    .reduce((o, p) => o ? o[p] : defaultValue, obj)\n}\n","/**\n * Simply Map over the props of an object\n */\nexport default function mapValues (obj, fn) {\n  let keys = Object.keys(obj);\n  // console.info(`keys: ${keys}`);\n  var newObject = keys.reduce(function(acc, currentKey) {\n    // console.log(`   acc: ${JSON.stringify(acc)} curKey: ${currentKey}`);\n    acc[currentKey] = fn(obj[currentKey], currentKey, obj);\n    return acc;\n  }, {});\n  // console.info(`  output: ${JSON.stringify(newObject)}`);\n  return newObject;\n}\n","/**\n * Deep Map over the values in an object\n */\nimport mapValues from './mapValues';\n\n function isDate (v) {\n   return v instanceof Date\n }\n\n function isFunction (v) {\n   return typeof v === 'function'\n }\n\n function isObject (v) {\n   return typeof v === 'object'\n }\n\n function isRegExp (v) {\n   return v instanceof RegExp\n }\n\nexport default function deepMapValues(object, callback, propertyPath, that) {\n  propertyPath = propertyPath || '';\n  if(Array.isArray(object)){\n    return object.map(deepMapValuesIteratee);\n  }\n  else if(object && isObject(object) && !isDate(object) && !isRegExp(object) && !isFunction(object)){\n    return Object.assign({}, object, mapValues(object, deepMapValuesIteratee));\n  }\n  else {\n    let output = callback(object, propertyPath);\n    return output;\n  }\n\n  function deepMapValuesIteratee(value, key){\n    var valuePath = propertyPath ? propertyPath + '.' + key : key;\n    return deepMapValues(value, callback, valuePath);\n  }\n}\n","/**\n * The arborist is responsible for pruning trees with nodes/entries\n * marked with `{{delete:NNN}}`\n *\n * There are multiple exports, mainly to allow for easy testing of the\n * worker functions. Only `arborist` is meant to be used directy\n */\n// import mapValues from 'lodash.mapvalues';\nimport mapValues from '../mapValues';\n\nfunction isObject (v) {\n  return typeof v === 'object'\n}\n\n/**\n * Trim a tree decorated with `{{delete:NNN}}`\n */\nexport function arborist (object, propertyPath) {\n  propertyPath = propertyPath || '';\n\n  if(Array.isArray(object)){\n    // filter out any nulls...\n    let arrResults = object.map(iteratee).filter((entry) => {\n      // need to ensure entry is actually NULL vs just falsey\n      return entry !== null && entry !== undefined;\n    });\n    return pruneArray(arrResults);\n\n  } if(object && isObject(object) ) {\n\n    return pruneObject(mapValues(object, iteratee));\n\n  } else {\n\n    return getPropertyValue(object, propertyPath);\n  }\n\n  function iteratee(value, key){\n    var valuePath = propertyPath ? propertyPath + '.' + key: key;\n    return arborist(value, valuePath);\n  }\n}\n\n/**\n * Prune an array\n * For all the entries in the array...\n *    if the entry is a naked string and contains `{{delete:NNN}}`\n *      get maximum NNN value\n *    then\n *      if maxN === 0\n *        return an empty array\n *      if maxN > 0\n *        return `{{delete:maxN-1}}`\n *    else\n *      return array\n */\nexport function pruneArray (arrResults) {\n  let res = arrResults;\n  // is any entry a string w/ {{delete}}?\n  let maxLevel = arrResults.reduce((maxLevel, e) => {\n    if (isString(e) && hasDelete(e)) {\n      let lvl = getLevel(e);\n      if (lvl > maxLevel) {\n        maxLevel = lvl;\n      }\n    }\n    return maxLevel;\n  }, -1);\n\n  if (maxLevel > -1) {\n    if (maxLevel === 0) {\n      res = []\n    } else {\n      res = `{{delete:${maxLevel - 1}}}`;\n    }\n  }\n\n  return res;\n}\n\n\nexport function pruneObject (objResults) {\n  // console.log(`   pruneObject:: working on ${JSON.stringify(objResults)}`);\n  let startVal = {obj: {}, maxLevel: -1 };\n  let res;\n  // cook a new clone object, and track the maxLevel\n  let reduction = Object.keys(objResults).reduce((acc, key) => {\n    let val = objResults[key];\n    if (isString(val) && hasDelete(val)) {\n      let lvl = getLevel(val);\n      if (lvl > acc.maxLevel) {\n        acc.maxLevel = lvl;\n      }\n    } else {\n      // only add the prop if it's not a `{{delete:NNN}}`\n      acc.obj[key] = val;\n    }\n    return acc;\n  }, startVal);\n  // if -1, we return entire object...\n  // if 0 we just remove the prop...\n  // if 1 we return undefined...\n  // if > 1 we return the deleteVal\n  if (reduction.maxLevel > 0 ) {\n    if (reduction.maxLevel === 1) {\n      res = undefined;\n    } else {\n      res = `{{delete:${reduction.maxLevel - 1}}}`;\n    }\n  } else {\n    res = reduction.obj;\n  }\n\n  // console.log(`     returning ${JSON.stringify(res)}`);\n  return res;\n}\n\n/**\n * Get a value for a property, handling the `{{delete:NNN}}` syntax\n */\nexport function getPropertyValue (val){\n  let output = val;\n\n  if (typeof val === 'string') {\n    if (hasDelete(val)) {\n      output = getDeleteValue(val);\n    }\n  }\n  return output;\n}\n\n/**\n * Given a string with `{{delete:NNN}}`\n * if NNN === 0 return undefined\n * else return `{{delete:NNN - 1}}`\n */\nfunction getDeleteValue (val) {\n  let output = val;\n  let level = getLevel(val);\n  if (level === 0) {\n    output = undefined;\n  } else {\n    output = `{{delete:${level}}}`;\n  }\n  return output;\n}\n\n/**\n * Extract the level from a `{{delete:NNN}}`\n */\nfunction getLevel (value) {\n  return parseInt(value.replace(/{|}/g, '').split(':')[1]);\n}\n\n/**\n * Simple check if a value has `{{delete` in it\n */\nfunction hasDelete (value) {\n  if (value && typeof value === 'string') {\n    return value.indexOf('{{delete') > -1;\n  } else {\n    return false;\n  }\n}\n\nfunction isString (v) {\n  return typeof v === 'string';\n}\n","/**\n * Optional Transform\n * Supports a declarative syntax for optional template properties\n *\n * {{some.object.key:optional:2}}\n *\n * In this example, if defined, the value of `some.object.key` is used.\n * If not defined, then the optional transform is utilized\n * and a post-processing step is executed which will remove two parent levels\n * from the output structure\n */\n\nexport default function optional(key, value, settings, level = 0) {\n  // console.log(`optional: ${key}, ${value}, ${level}`);\n  let val = value;\n  if (!value) {\n    val = `{{delete:${level}}}`;\n  }\n  return val;\n}\n","/**\n * adlib.js\n */\nimport getWithDefault from './getWithDefault';\nimport deepMapValues from './deepMap';\nimport {arborist} from './optional-transform/arborist';\nimport optionalTransform from './optional-transform/optional';\n\nfunction isString(v) {\n  return typeof v === 'string';\n}\n\nfunction _swap(parameter, settings, transforms) {\n  let value;\n  // console.info(`_swap: param: ${parameter}`);\n  // Parameters can optionally call transform functions\n  // e.g. \"{{ipsum:translateLatin}}\"\n  // so extract {{<parameter>:<transformFunction>:<key||value>}}\n  let transformCheck = parameter.split(':');\n  if (transformCheck.length > 1) {\n    // we have a request to use a transform...\n    let key = transformCheck[0];\n    let fn = transformCheck[1];\n    // we default to using the value...\n    let param = null;\n    if (transformCheck[2]){\n      param = transformCheck[2];\n    }\n    if(transforms && transforms[fn] && typeof transforms[fn] === 'function') {\n      // get the value from the param\n      value = getWithDefault(settings, key);\n      // transform it...\n      value = transforms[fn](key, value, settings, param);\n    } else {\n      throw new Error(`Attempted to apply non-existant transform ${fn} on ${key} with params ${parameter}`);\n    }\n  } else {\n    // we just get the value\n    value = getWithDefault(settings, parameter);\n  }\n  return value;\n}\n\n/**\n * Does a propertyPath exist on a target\n */\nfunction _propertyPathExists (propertyPath, target) {\n  // remove any transforms\n  let cleanPath = propertyPath.split(':')[0];\n  let value = getWithDefault(target, cleanPath, null);\n  if (value !== null && value !== undefined) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Combine a Template with Settings\nexport default function adlib(template, settings, transforms = null) {\n  transforms = transforms || {};\n  if (transforms.optional) {\n    throw new Error('Please do not pass in an `optional` transform, adlib provides that interally.');\n  } else {\n    transforms.optional = optionalTransform;\n  }\n\n  let res = deepMapValues(template, function(templateValue, templatePath){\n    // Only string templates\n    if (!isString(templateValue)) {\n      return templateValue;\n    }\n\n    // When we match \"{{layer.fields..}}\"\n    var settingsValue;\n    var replaceValue = false;\n\n    // var handlebars = /{{[\\S\\s]*?}}/g;\n    var handlebars = /{{[\\w\\.\\:||&\\/?=]*?}}/g;\n    let hbsEntries = templateValue.match(handlebars);\n\n    if (hbsEntries && hbsEntries.length) {\n      // console.log(`Got a ${hbsEntries.length} handlebar entries...`);\n      let isStaticValue = false;\n      // iterate over the entries...\n      let values = hbsEntries.map((entry) => {\n        // console.info(`Matched ${entry}...`);\n        // strip off the curlies...\n        let path = entry.replace(/{|}/g, '');\n        // check for || which indicate a hiearchy\n        if (path.indexOf('||') > -1) {\n          var paths = path.split('||');\n          let numberOfPaths = paths.length;\n          // here we check each option, in order, and return the first with a value in the hash, OR the last\n          path = paths.find((pathOption, idx) => {\n            // console.info(`Checking to see if ${pathOption} is in settings hash...`);\n            let exists = _propertyPathExists(pathOption, settings);\n            if (!exists) {\n              if ((idx + 1) === numberOfPaths) {\n                // console.info(`Got to last entry, and still did not find anything... assuming ${pathOption} is a static value...`);\n                isStaticValue = true;\n                // check if we can convert this into a number...\n                if (!isNaN(pathOption)) {\n                  pathOption = parseInt(pathOption);\n                }\n                return pathOption;\n              } else {\n                return false;\n              }\n            } else {\n              return pathOption;\n            }\n          });\n        }\n        // setup the return value...\n        let result = {\n          key: entry,\n          value: path\n        }\n        // if we have a valid object path, value comes from _swap\n        if (!isStaticValue) {\n          result.value = _swap(path, settings, transforms) || entry;\n        }\n        // console.info(`Value: ${JSON.stringify(result)}`);\n        return result;\n      });\n\n      values.forEach((v) => {\n        // console.log(`Comparing ${templateValue} with ${v.key}`)\n        if (templateValue === v.key) {\n          // console.log(`template matches key, returning ${v.value}`);\n          // if the value is a string...\n          if (typeof v.value === 'string') {\n            // and it's numeric-ish\n            if(!isNaN(v.value)) {\n              // and has a . in it...\n              if (v.value.indexOf('.') > -1) {\n                // parse as a float...\n                v.value = parseFloat(v.value);\n              } else {\n                // parse as an int\n                v.value = parseInt(v.value);\n              }\n            }\n          }\n          settingsValue = v.value;\n        } else {\n          // a little extra regex dance to match the '||' because '|'\n          // is a Very Special Regex Character and we need to super\n          // escape them for the regex to work\n          console.log(`KEY ${v.key}`);\n          console.log(`TEMPLATE ${templateValue}`);\n          templateValue = templateValue.replace(v.key, v.value);\n          // console.log(`template did not match key, interpolating value ${v.value} into template to produce ${templateValue}`);\n        }\n      });\n\n      // if we have a value, let's return that...\n      if (settingsValue) {\n        // console.log(`We found a value so we return it ${settingsValue}`);\n        return settingsValue;\n      } else {\n        // console.log(`We did not find a value so we return the template ${templateValue}`);\n        // but if we don't, lets return the template itself\n        return templateValue;\n      }\n    } else {\n      // console.log(`We did not find a hbs match, so we return the template ${templateValue}`);\n      // no match, return the templateValue...\n      return templateValue;\n    }\n  });\n  return arborist(res);\n}\n"],"names":["let","isObject","isString","optionalTransform"],"mappings":"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"}